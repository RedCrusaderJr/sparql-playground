#title:draw-feeder
#comment: conducting equipment (ACL segment) with wkt linestring

#tags:draw-geometry,connected-points,wkt,coordinates
#color:ex-blue
#img:

SELECT DISTINCT ?g_wktSegmentLine ?wktPoint1 ?wktPoint2 ?length WHERE 
{
    {
        #conducting equipment with coordinates
        SELECT DISTINCT ?conductingEquipmentId ?x1 ?y1 ?x2 ?y2 WHERE 
        {      
            #position point 1 of location with coordinates
            ?postionPointId1 cim:PositionPoint.Location ?locationId;
                cim:PositionPoint.xPosition ?x1;
                cim:PositionPoint.yPosition ?y1.
            
            #position point 2 of location with coordinates
            ?postionPointId2 cim:PositionPoint.Location ?locationId;
                cim:PositionPoint.xPosition ?x2;
                cim:PositionPoint.yPosition ?y2.

		   	#reducing cartesian product
            FILTER(str(?postionPointId1) < str(?postionPointId2))
            
		  	#reducing coordinates permutations
            FILTER(?x1 != ?x2 || ?y1 != ?y2)
        }
    }

    #construct LINESTRING WKT
    BIND(concat("LINESTRING (", str(?x1), " ", str(?y1), ", ", str(?x2), " ", str(?y2), ")") as ?segmentLineStr).
    BIND(strdt(?segmentLineStr, geo:wktLiteral) as ?g_wktSegmentLine).
  
  	#construct POINT WKTs
  	BIND(concat("POINT (", str(?x1), " ", str(?y1), ")") as ?point1Str).
  	BIND(strdt(?point1Str, geo:wktLiteral) as ?wktPoint1).
  	
  	BIND(concat("POINT (", str(?x2), " ", str(?y2), ")") as ?point2Str).
  	BIND(strdt(?point2Str, geo:wktLiteral) as ?wktPoint2).
  
  	#calculate distance
  	BIND(geof:distance(?wktPoint1, ?wktPoint2, uom:metre) as ?length).
}